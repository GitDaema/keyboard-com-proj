# keyboard_presets
# 키보드 LED 기반 컴퓨터 구조 시뮬레이터용 프리셋
# - LSB = 오른쪽, MSB = 왼쪽
# - 레지스터 = 연산 중 잠깐 들고 있는 작업 공간 (SRC1, SRC2, RES)
# - 메모리 = 변수의 집 (니블 2개, 무지개 16색으로 표현)
# - IR(F1~F12) = 현재 실행 중인 명령어
# - PC(별도 블록) = 명령어 위치

# ---------------------------------------------------------------------
# 레지스터 (작업 공간, 3개)
# ---------------------------------------------------------------------
SRC1 = ["T","Y","U","I","O","P","[","]"]    # $s1 : 피연산자1, 8비트
SRC2 = ["F","G","H","J","K","L",";","'"]    # $s2 : 피연산자2, 8비트
RES  = ["C","V","B","N","M",",",".","/"]    # $r  : 결과 레지스터, 8비트

# SRC1_FU = "\ (ANSI)"
# SRC2_FU = "Enter"
# RES_FU = "Right Shift"

# REGISTERS = {
#     "$s1": SRC1,
#     "$s2": SRC2,
#     "$r":  RES,
# }

# ---------------------------------------------------------------------
# IR (명령어 레지스터)
# ---------------------------------------------------------------------
# F1~F4 = OP코드, F5~F12 = 오퍼랜드/모드
IR12 = ["F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12"]

# ---------------------------------------------------------------------
# PC (프로그램 카운터, 10진 표시안)
# ---------------------------------------------------------------------
PC = ["1","2","3","4","5","6","7","8","9","0"]

# ── CPU 플래그 LED 전용 프리셋 ─────────────────────
# 왼쪽 하단 키: Z=Left Control, N=Left Windows, V=Left Alt
FLAG_LABELS = {
    "Z": "left_ctrl",
    "N": "left_win",
    "V": "left_alt",
}

BINARY_COLORS = {
    # ON 색상, OFF 색상
    "left_ctrl": ((0, 255, 64), (80, 80, 80)),   # Z: 초록
    "left_win": ((0, 128, 255), (80, 80, 80)),  # N: 파랑
    "left_alt":     ((255, 200, 0), (80, 80, 80)),  # V: 노랑
}